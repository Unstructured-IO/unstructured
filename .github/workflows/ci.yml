name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  CI: true
  NLTK_DATA: ${{ github.workspace }}/nltk_data
  PYTHON_VERSION: "3.12"

jobs:
  lint-checks:
    name: Lint and Checks
    runs-on: ubuntu-latest
    needs: [changelog]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Python dependencies
        run: make install

      - name: License Check
        run: make check-licenses

      - name: Python Lint
        run: make check
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
        env:
          SHELLCHECK_OPTS: '--exclude=SC2148,SC2086 --exclude-dir=.venv'

      - name: Shell Formatter (shfmt)
        uses: mfinelli/setup-shfmt@v3
      - run: shfmt -i 2 -d .

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: [lint-checks]
    strategy:
      fail-fast: false
      matrix:
        test-type: ["base", "no-extras"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Homebrew
        run: |
          echo 'eval "$\(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> $GITHUB_ENV

      - name: Install System Dependencies
        if: matrix.test-type == 'base'
        run: |
          brew update
          brew install libmagic poppler libreoffice tesseract tesseract-lang

      - name: Install Python Dependencies
        run: make install

      - name: Run Tests
        env:
          UNS_API_KEY: ${{ secrets.UNS_API_KEY }}
          CI: true
          UNSTRUCTURED_INCLUDE_DEBUG_METADATA: true
        run: |
          if [ "${{ matrix.test-type }}" == "base" ]; then
            make test
            make check-coverage
          else
            make test-no-extras
          fi

  dependency-extras-tests:
    name: Dependency Extras Tests
    runs-on: ubuntu-latest
    needs: [unit-tests]
    strategy:
      matrix:
        extra: [csv, docx, odt, markdown, pypandoc, pdf-image, pptx, xlsx]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Homebrew
        run: echo 'eval "$\(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> $GITHUB_ENV

      - name: Install System Dependencies
        run: |
          brew update
          brew install pandoc libmagic poppler libreoffice tesseract tesseract-lang

      - name: Install Python Dependencies
        run: make install

      - name: Run Extra Tests
        env:
          UNS_API_KEY: ${{ secrets.UNS_API_KEY }}
          UNSTRUCTURED_HF_TOKEN: ${{ secrets.HF_TOKEN }}
          CI: true
        run: |
          make test-extra-${{ matrix.extra }}

  ingest-tests:
    name: Ingest Tests
    runs-on: ubuntu-latest
    needs: [lint-checks]
    steps:
      - name: Run Ingest Test
        env:
          AIRTABLE_PERSONAL_ACCESS_TOKEN: ${{ secrets.AIRTABLE_PERSONAL_ACCESS_TOKEN }}
          ASTRA_DB_API_ENDPOINT: ${{ secrets.ASTRA_DB_ENDPOINT }}
          ASTRA_DB_APPLICATION_TOKEN: ${{ secrets.ASTRA_DB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AZURE_SEARCH_API_KEY: ${{ secrets.AZURE_SEARCH_API_KEY }}
          AZURE_SEARCH_ENDPOINT: ${{ secrets.AZURE_SEARCH_ENDPOINT }}
          BOX_APP_CONFIG: ${{ secrets.BOX_APP_CONFIG }}
          CONFLUENCE_API_TOKEN: ${{ secrets.CONFLUENCE_API_TOKEN }}
          CONFLUENCE_USER_EMAIL: ${{ secrets.CONFLUENCE_USER_EMAIL }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DROPBOX_APP_KEY: ${{ secrets.DROPBOX_APP_KEY }}
          DROPBOX_APP_SECRET: ${{ secrets.DROPBOX_APP_SECRET }}
          DROPBOX_REFRESH_TOKEN: ${{ secrets.DROPBOX_REFRESH_TOKEN }}
          GCP_INGEST_SERVICE_KEY: ${{ secrets.GCP_INGEST_SERVICE_KEY }}
          GH_READ_ONLY_ACCESS_TOKEN: ${{ secrets.GH_READ_ONLY_ACCESS_TOKEN }}
          HUBSPOT_API_TOKEN: ${{ secrets.HUBSPOT_API_TOKEN }}
          JIRA_INGEST_API_TOKEN: ${{ secrets.JIRA_INGEST_API_TOKEN }}
          JIRA_INGEST_USER_EMAIL: ${{ secrets.JIRA_INGEST_USER_EMAIL }}
          MONGODB_DATABASE_NAME: ${{ secrets.MONGODB_DATABASE_NAME }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MS_CLIENT_CRED: ${{ secrets.MS_CLIENT_CRED }}
          MS_CLIENT_ID: ${{ secrets.MS_CLIENT_ID }}
          MS_TENANT_ID: ${{ secrets.MS_TENANT_ID }}
          MS_USER_EMAIL: ${{ secrets.MS_USER_EMAIL }}
          MS_USER_PNAME: ${{ secrets.MS_USER_PNAME }}
          MXBAI_API_KEY: ${{ secrets.MXBAI_API_KEY }}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          OCR_AGENT: "unstructured.partition.utils.ocr_models.tesseract_ocr.OCRAgentTesseract"
          OCTOAI_API_KEY: ${{ secrets.OCTOAI_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}
          SALESFORCE_CONSUMER_KEY: ${{ secrets.SALESFORCE_CONSUMER_KEY }}
          SALESFORCE_PRIVATE_KEY: ${{ secrets.SALESFORCE_PRIVATE_KEY }}
          SALESFORCE_USERNAME: ${{ secrets.SALESFORCE_USERNAME }}
          SHAREPOINT_CLIENT_ID: ${{ secrets.SHAREPOINT_CLIENT_ID }}
          SHAREPOINT_CRED: ${{ secrets.SHAREPOINT_CRED }}
          SHAREPOINT_PERMISSIONS_APP_CRED: ${{ secrets.SHAREPOINT_PERMISSIONS_APP_CRED }}
          SHAREPOINT_PERMISSIONS_APP_ID: ${{ secrets.SHAREPOINT_PERMISSIONS_APP_ID }}
          SHAREPOINT_PERMISSIONS_TENANT: ${{ secrets.SHAREPOINT_PERMISSIONS_TENANT }}
          SHAREPOINT_SITE: ${{ secrets.SHAREPOINT_SITE }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
        run: ./test_unstructured_ingest/test-ingest-src.sh

  json-to-html-tests:
    name: JSON to HTML Tests
    runs-on: ubuntu-latest-m
    needs: [lint-checks]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Setup Homebrew
        run: echo 'eval "$\(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> $GITHUB_ENV

      - name: Install System Dependencies
        run: |
          brew update
          brew install diffstat

      - name: Run HTML Fixture Diff Test
        env:
          OVERWRITE_FIXTURES: false
          PYTHONPATH: ${{ github.workspace }}
        run: ./test_unstructured_ingest/check-diff-expected-output-html.sh

  changelog:
    name: Changelog Enforcement
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - if: github.ref != 'refs/heads/main'
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            src:
              - 'unstructured/**'
      - if: steps.changes.outputs.src == 'true' && github.ref != 'refs/heads/main'
        uses: dangoslen/changelog-enforcer@v3

  docker-tests:
    name: Dockerfile Tests & Scan
    runs-on: ubuntu-latest-m
    needs: [lint-checks]
    steps:
      - uses: actions/checkout@v4

      - name: Build and Test Docker Image
        run: |
          echo "UNS_API_KEY=${{ secrets.UNS_API_KEY }}" > uns_test_env_file
          make docker-build
          make docker-test CI=true UNSTRUCTURED_INCLUDE_DEBUG_METADATA=true

      - name: Scan Docker Image
        uses: anchore/scan-action@v6
        with:
          image: "unstructured:dev"
          severity-cutoff: critical
          only-fixed: true
          output-format: table
