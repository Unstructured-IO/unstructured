name: Build And Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  DOCKER_REPOSITORY: quay.io/unstructured-io/unstructured
  PIP_VERSION: "22.2.1"
  PYTHON_VERSION: "3.8"

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

  tmate:
    runs-on: ubuntu-latest
    steps:
    - name: Set up tmate session
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
        limit-connections: true
        limit-time: 30m
        debug: true
        
  build-amd-local:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
    - name: Build AMD Image
      run: |
        docker build --build-arg PIP_VERSION=$PIP_VERSION \
          --progress plain \
          --cache-from $DOCKER_REPOSITORY:amd \
          -t myimage:latest .
    - name: Test AMD Image
      run: | 
        source .venv/bin/activate 
        DOCKER_PLATFORM="linux/amd64" DOCKER_IMAGE="$DOCKER_REPOSITORY:amd" make docker-test 

  # build-arm-local:
  #   runs-on: ubuntu-latest
  #   needs: [setup]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - uses: actions/cache@v3
  #     id: virtualenv-cache
  #     with:
  #       path: |
  #         .venv
  #         nltk_data
  #       key: unstructured-${{ runner.os }}-${{ hashFiles('requirements/*.txt') }}
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v
  #   - name: Build ARM Image
  #     run: |
  #       DOCKER_BUILDKIT=1 docker buildx build --platform=linux/arm64 --load \
  #         --build-arg PIP_VERSION=$PIP_VERSION \
  #         --progress plain \
  #         --cache-to type=gha,scope=$GITHUB_REF_NAME-$DOCKER_REPOSITORY \
  #         --cache-from type=gha,scope=$GITHUB_REF_NAME-$DOCKER_REPOSITORY \
  #         --cache-from $DOCKER_REPOSITORY:arm \
  #         -t $DOCKER_REPOSITORY:arm .
  #   - name: Test ARM Image
  #     run: | 
  #       source .venv/bin/activate 
  #       make docker-test DOCKER_PLATFORM=linux/arm64 DOCKER_IMAGE="$DOCKER_REPOSITORY:arm"
  
  # push-images:
  #   runs-on: ubuntu-latest
  #   needs: [build-amd-local, build-arm-local]
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Login to Quay.io
  #     uses: docker/login-action@v1
  #     with:
  #       registry: quay.io
  #       username: ${{ secrets.QUAY_IO_ROBOT_USERNAME }}
  #       password: ${{ secrets.QUAY_IO_ROBOT_TOKEN }}
  #   - name: Push AMD Image
  #     run: |
  #       docker push $DOCKER_REPOSITORY:amd
  #   - name: Push ARM Image
  #     run: |
  #       docker push $DOCKER_REPOSITORY:arm
  #   - name: Create Manifest
  #     run: |
  #       docker manifest create $DOCKER_REPOSITORY:latest $DOCKER_REPOSITORY:amd $DOCKER_REPOSITORY:arm
  #       docker manifest push $DOCKER_REPOSITORY:latest
  #   - name: Push Tag
  #     run: |
  #       docker push $DOCKER_REPOSITORY:latest