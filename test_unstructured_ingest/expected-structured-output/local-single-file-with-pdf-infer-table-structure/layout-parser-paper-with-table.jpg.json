[
  {
    "element_id": "5c7680c84b0ef4410a026f3ca56076b0",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "LayoutParser: A Unified Toolkit for DL-Based DIA 5",
    "type": "Title"
  },
  {
    "element_id": "63c3501f2ce3677df09182a3f384cec3",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "Table 1: Current layout detection models in the LayoutParser model zoo",
    "type": "FigureCaption"
  },
  {
    "element_id": "e5a2b4915a50a3bc9e554457ef56c4b7",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1,
      "text_as_html": "<table><thead><th>Dataset</th><th>| Base Model!|</th><th>Large Model</th><th>| Notes</th></thead><tr><td>PubLayNet [33]</td><td>P/M</td><td>M</td><td>Layouts of modern scientific documents</td></tr><tr><td>PRImA [3]</td><td>M</td><td></td><td>Layouts of scanned modern magazines and scientific reports</td></tr><tr><td>Newspaper [17]</td><td>P</td><td></td><td>Layouts of scanned US newspapers from the 20th century</td></tr><tr><td>TableBank [18]</td><td>P</td><td></td><td>Table region on modern scientific and business document</td></tr><tr><td>HIDataset [31]</td><td>P/M</td><td></td><td>Layouts of history Japanese documents</td></tr></table>"
    },
    "text": "Dataset | Base Model\" Large Model | Notes PubLayNet [38] P/M M Layouts of modern scientific documents PRImA [3) M - Layouts of scanned modern magazines and scientific reports Newspaper [17] P - Layouts of scanned US newspapers from the 20th century ‘TableBank (18) P P Table region on modern scientific and business document HJDataset (31) | F/M - Layouts of history Japanese documents",
    "type": "Table"
  },
  {
    "element_id": "535fa30d7e25dd8a49f1536779734ec8",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "2",
    "type": "UncategorizedText"
  },
  {
    "element_id": "8db1d94e0ebd590061d5f213d140a3fc",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "For each dataset, we train several models of different sizes for different needs (the trade-off between accuracy vs. computational cost). For “base model” and “large model”, we refer to using the ResNet 50 or ResNet 101 backbones [13], respectively. One can train models of different architectures, like Faster R-CNN [28] (P) and Mask R-CNN [12] (M). For example, an F in the Large Model column indicates it has m Faster R-CNN model trained using the ResNet 101 backbone. The platform is maintained and a number of additions will be made to the model zoo in coming months.",
    "type": "FigureCaption"
  },
  {
    "element_id": "8178823079165708264aad0e82d7bd2f",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "layout data structures, which are optimized for efficiency and versatility. 3) When necessary, users can employ existing or customized OCR models via the unified API provided in the OCR module. 4) LayoutParser comes with a set of utility functions for the visualization and stomge of the layout data. 5) LayoutParser is also highly customizable, via its integration with functions for layout data annotation and model training. We now provide detailed descriptions for each component.",
    "type": "NarrativeText"
  },
  {
    "element_id": "d55ac79bd3407e1f62e5dd9eb6251cd0",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "3.1 Layout Detection Models",
    "type": "Title"
  },
  {
    "element_id": "59371d088cdab4238f6c616bd7b5f884",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "In LayoutParser, a layout model takes a document image as an input and generates a list of rectangular boxes for the target content regions. Different from traditional methods, it relies on deep convolutional neural networks rather than manually curated rules to identify content regions. It is formulated as an object detection problem and state-of-the-art models like Faster R-CNN [28] and Mask R-CNN [12] are used. This yields prediction results of high accuracy and makes it possible to build a concise, generalized interface for layout detection. LayoutParser, built upon Detectron2 [35], provides a minimal API that can perform layout detection with only four lines of code in Python:",
    "type": "NarrativeText"
  },
  {
    "element_id": "6b747009cd36e889f0d252ea918410c7",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "import layoutparser as lp",
    "type": "ListItem"
  },
  {
    "element_id": "eae59d2e02a5a01b69c48ac285806040",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "wwe",
    "type": "Title"
  },
  {
    "element_id": "740205ea96d71dc1218c3d2f47c8e9ed",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "image = cv2.imread(\"image_file\") # load images",
    "type": "ListItem"
  },
  {
    "element_id": "16c411260693dd47903275e102fb183f",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "model = lp. Detectron2LayoutModel (",
    "type": "ListItem"
  },
  {
    "element_id": "95d18d03e9c2a43179240143934f22dc",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "ea \"lp: //PubLayNet/faster_rcnn_R_50_FPN_3x/config\")",
    "type": "ListItem"
  },
  {
    "element_id": "b880b38da5d36ff221214e8bbe17e3c7",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "layout = model.detect (image)",
    "type": "ListItem"
  },
  {
    "element_id": "79fe7267e0e542a59da97ad8d7a75b23",
    "metadata": {
      "data_source": {
        "permissions_data": [
          {
            "mode": 33188
          }
        ],
        "url": "/home/runner/work/unstructured/unstructured/test_unstructured_ingest/example-docs/layout-parser-paper-with-table.jpg"
      },
      "filetype": "image/jpeg",
      "languages": [
        "eng"
      ],
      "page_number": 1
    },
    "text": "LayoutParser provides a wealth of pre-trained model weights using various datasets covering different languages, time periods, and document types. Due to domain shift [7], the prediction performance can notably drop when models are ap- plied to target samples that are significantly different from the training dataset. As document structures and layouts vary greatly in different domains, it is important to select models trained on a dataset similar to the test samples. A semantic syntax is used for initializing the model weights in Layout Parser, using both the dataset name and model name 1p://<dataset-name>/<model-architecture-name>.",
    "type": "NarrativeText"
  }
]